/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package duchat.app;

import duchat.app.client.frmChat;
import duchat.app.server.ChatServer;
import duchat.entity.Server;
import duchat.entity.User;
import duchat.service.ServerService;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author dursun
 */
public class frmHome extends javax.swing.JFrame {

    /**
     * Creates new form frmHome
     */
    User user;
    ServerService serverService = new ServerService();
    DefaultListModel modelAllServers;
    DefaultListModel modelOffServers;
    DefaultListModel modelOnServers;
    private final HashMap<String, ChatServer> chatServers = new HashMap<>();

    public frmHome() {
        initComponents();
    }

    frmHome(User user) {
        initComponents();
        this.user = user;
        this.user.setPassword("");
        this.setTitle("DuChatApp | @" + user.getUsername());
        System.out.println(this.user.getUsername() + ": Logged In.");
        modelAllServers = new DefaultListModel();
        modelOffServers = new DefaultListModel();
        modelOnServers = new DefaultListModel();

        lstAllServers.setModel(modelAllServers);
        lstOffServers.setModel(modelOffServers);
        lstOnServers.setModel(modelOnServers);

        loadAllServerList();
        loadMyOffServerList();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAllServers = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstOffServers = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstOnServers = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnJoinChat = new javax.swing.JButton();
        btnLeaveServer = new javax.swing.JButton();
        btnFindServer = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        btnCreateServer = new javax.swing.JButton();
        btnGetUserCount = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Du Chat App");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Du Chat Home");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Servers");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("My Offline Servers");

        lstAllServers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstAllServers);

        lstOffServers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstOffServers);

        lstOnServers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstOnServers.setToolTipText("");
        jScrollPane3.setViewportView(lstOnServers);

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("My Online Servers");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnJoinChat.setText("Join Chat");
        btnJoinChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinChatActionPerformed(evt);
            }
        });

        btnLeaveServer.setText("Leave Server");
        btnLeaveServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeaveServerActionPerformed(evt);
            }
        });

        btnFindServer.setText("Find Server");
        btnFindServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindServerActionPerformed(evt);
            }
        });

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");

        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnCreateServer.setText("Create Server");
        btnCreateServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateServerActionPerformed(evt);
            }
        });

        btnGetUserCount.setText("Get User Count");
        btnGetUserCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetUserCountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLeaveServer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFindServer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnJoinChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(btnStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGetUserCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnJoinChat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnLeaveServer)
                                    .addComponent(btnFindServer)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnStart)
                                    .addComponent(btnStop)
                                    .addComponent(btnDelete))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCreateServer)
                                    .addComponent(btnGetUserCount))))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addComponent(jSeparator3)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnJoinChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJoinChatActionPerformed
        Server server = lstAllServers.getSelectedValue();
        var frmChat = new frmChat(this.user, server);
    }//GEN-LAST:event_btnJoinChatActionPerformed

    private void btnCreateServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateServerActionPerformed
        new frmServerCreate(this.user, new ServerService()).setVisible(true);
    }//GEN-LAST:event_btnCreateServerActionPerformed

    private void btnFindServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindServerActionPerformed
        new frmServerLogin(this.user, new ServerService()).setVisible(true);
    }//GEN-LAST:event_btnFindServerActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        Server server = lstOffServers.getSelectedValue();
        startServer(server);
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        Server server = lstOnServers.getSelectedValue();
        stopServer(server);
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnLeaveServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeaveServerActionPerformed
        Server server = lstAllServers.getSelectedValue();
        leaveServer(server);
    }//GEN-LAST:event_btnLeaveServerActionPerformed

    private void btnGetUserCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetUserCountActionPerformed
        Server server = lstOnServers.getSelectedValue();
        ChatServer chatServer = chatServers.get(server.getCode());
        System.out.println("Servers: " + chatServers.size());
        System.out.println("User in Selected Server: " + chatServer.getUserCount());
    }//GEN-LAST:event_btnGetUserCountActionPerformed

    private void loadAllServerList() {
        ArrayList<Server> serverList = serverService.getConnectedServerList(user);
        for (Server server : serverList) {
            modelAllServers.addElement(server);
        }
    }

    private void loadMyOffServerList() {
        ArrayList<Server> serverList = serverService.getOwnedServerList(user);
        for (Server server : serverList) {
            modelOffServers.addElement(server);
        }
    }

    private void startServer(Server server) {
        // TO-DO Update server ip when before started to avoid ip confilict
        Server updatedServer = updateServerIp(server);
        if (updatedServer != null) {
            ChatServer chatServer = new ChatServer(this.user, updatedServer);
            serverService.connectServer(user, server);
            chatServers.put(server.getCode(), chatServer);
            chatServer = chatServers.get(server.getCode());
            chatServer.start();
            
            modelOffServers.removeElement(server);
            modelOnServers.addElement(server);
            modelAllServers.addElement(server);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Server could not started. Try again later!");
        }
    }

    private void stopServer(Server server) {
        ChatServer remove = chatServers.remove(server.getCode());
        remove.stop();
        serverService.disconnectServer(this.user, server);

        modelOnServers.removeElement(server);
        modelAllServers.removeElement(server);
        modelOffServers.addElement(server);
    }

    private void leaveServer(Server server) {
        serverService.disconnectServer(this.user, server);
        modelAllServers.removeElement(server);
    }

    private Server updateServerIp(Server server) {
        InetAddress inetAddress;
        try {
            inetAddress = InetAddress.getLocalHost();
            String hostIp = inetAddress.getHostAddress();
            if (hostIp.equals(server.getIp())) {
                return server;
            } else {
                server.setIp(inetAddress.getHostAddress());
                return serverService.updateServerIp(server);
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateServer;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFindServer;
    private javax.swing.JButton btnGetUserCount;
    private javax.swing.JButton btnJoinChat;
    private javax.swing.JButton btnLeaveServer;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JList<duchat.entity.Server> lstAllServers;
    private javax.swing.JList<duchat.entity.Server> lstOffServers;
    private javax.swing.JList<duchat.entity.Server> lstOnServers;
    // End of variables declaration//GEN-END:variables
}
